// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Cv /> component index expects component to match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <withProps(withProps(withProps(Cv)))
    jobGroups={
      Object {
        "certificates": Array [
          Object {
            "company": "bla",
            "description": "bla",
            "from": "bla",
            "title": "bla",
            "to": "bla",
          },
        ],
        "employments": Array [
          Object {
            "company": "bla",
            "description": "bla",
            "from": "bla",
            "title": "bla",
            "to": "bla",
          },
        ],
        "internships": Array [
          Object {
            "company": "bla",
            "description": "bla",
            "from": "bla",
            "title": "bla",
            "to": "bla",
          },
        ],
        "training": Array [
          Object {
            "company": "bla",
            "description": "bla",
            "from": "bla",
            "title": "bla",
            "to": "bla",
          },
        ],
      }
    }
    jobSet={
      Array [
        Object {
          "company": "Bla bla",
          "description": "Bla bla",
          "from": "05/01/2017",
          "group": "Bla bla",
          "title": "Bla bla",
          "to": "05/01/2018",
        },
      ]
    }
    location={
      Object {
        "pathname": "/some/path",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "jobGroups": Object {
        "certificates": Array [
          Object {
            "company": "bla",
            "description": "bla",
            "from": "bla",
            "title": "bla",
            "to": "bla",
          },
        ],
        "employments": Array [
          Object {
            "company": "bla",
            "description": "bla",
            "from": "bla",
            "title": "bla",
            "to": "bla",
          },
        ],
        "internships": Array [
          Object {
            "company": "bla",
            "description": "bla",
            "from": "bla",
            "title": "bla",
            "to": "bla",
          },
        ],
        "training": Array [
          Object {
            "company": "bla",
            "description": "bla",
            "from": "bla",
            "title": "bla",
            "to": "bla",
          },
        ],
      },
      "jobSet": Array [],
      "location": Object {
        "pathname": "/some/path",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "jobGroups": Object {
          "certificates": Array [
            Object {
              "company": "bla",
              "description": "bla",
              "from": "bla",
              "title": "bla",
              "to": "bla",
            },
          ],
          "employments": Array [
            Object {
              "company": "bla",
              "description": "bla",
              "from": "bla",
              "title": "bla",
              "to": "bla",
            },
          ],
          "internships": Array [
            Object {
              "company": "bla",
              "description": "bla",
              "from": "bla",
              "title": "bla",
              "to": "bla",
            },
          ],
          "training": Array [
            Object {
              "company": "bla",
              "description": "bla",
              "from": "bla",
              "title": "bla",
              "to": "bla",
            },
          ],
        },
        "jobSet": Array [],
        "location": Object {
          "pathname": "/some/path",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
