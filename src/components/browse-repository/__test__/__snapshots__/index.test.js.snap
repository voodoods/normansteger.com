// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BrowseRepository /> component index expects component to match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BrowseRepository
    openInNewTab={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="content-left"
        >
          <i
            className="fa fa-code-fork fa-3x"
          />
        </div>,
        <div
          className="content-right"
        >
          <b>
            Want to take a look into the code?
          </b>
          <br />
          <span>
            Browse the repository of this site!
          </span>
        </div>,
      ],
      "className": "BrowseRepository pure-u-1",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fa fa-code-fork fa-3x"
          />,
          "className": "content-left",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-code-fork fa-3x",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <b>
              Want to take a look into the code?
            </b>,
            <br />,
            <span>
              Browse the repository of this site!
            </span>,
          ],
          "className": "content-right",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Want to take a look into the code?",
            },
            "ref": null,
            "rendered": "Want to take a look into the code?",
            "type": "b",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Browse the repository of this site!",
            },
            "ref": null,
            "rendered": "Browse the repository of this site!",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
  width: 30%;
  font-size: 0.8em;
  cursor: pointer;

  b,
  span,
  i {
    color: #ccc;
    line-height: 1.6em;
  }

  .content-left,
  .content-right {
    float: left;
  }

  .content-right {
    margin: 10px 15px;
  }

  &:hover {
    b,
    span,
    i {
      color: #000;
    }
  }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="content-left"
          >
            <i
              className="fa fa-code-fork fa-3x"
            />
          </div>,
          <div
            className="content-right"
          >
            <b>
              Want to take a look into the code?
            </b>
            <br />
            <span>
              Browse the repository of this site!
            </span>
          </div>,
        ],
        "className": "BrowseRepository pure-u-1",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fa fa-code-fork fa-3x"
            />,
            "className": "content-left",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-code-fork fa-3x",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <b>
                Want to take a look into the code?
              </b>,
              <br />,
              <span>
                Browse the repository of this site!
              </span>,
            ],
            "className": "content-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Want to take a look into the code?",
              },
              "ref": null,
              "rendered": "Want to take a look into the code?",
              "type": "b",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Browse the repository of this site!",
              },
              "ref": null,
              "rendered": "Browse the repository of this site!",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": true,
          "rules": Array [
            "
  width: 30%;
  font-size: 0.8em;
  cursor: pointer;

  b,
  span,
  i {
    color: #ccc;
    line-height: 1.6em;
  }

  .content-left,
  .content-right {
    float: left;
  }

  .content-right {
    margin: 10px 15px;
  }

  &:hover {
    b,
    span,
    i {
      color: #000;
    }
  }
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
